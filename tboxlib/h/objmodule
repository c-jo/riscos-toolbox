/* Copyright 2000 Pace Micro Technology plc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Toolbox common library (objmodule.h)
 *
 * useful utilities for toolbox modules
 *
 */
#ifndef common_objmodule_h
#define common_objmodule_h

/* Register with the Toolbox module as an object module.
 *
 * Bit 30 of the flags is used to signal that failure to register with the toolbox module
 * on the grounds that the SWI call failed with a SWI not known error should be reported.
 * When this bit is not set, such faults will NOT be reported.  This allows object modules
 * to sleep until such time as a Toolbox modules comes along.
 */
enum {
  objmodule_REPORT_BAD_SWI = 1U<<30
};
extern _kernel_oserror *objmodule_register_with_toolbox(int /*flags*/, int /*class*/, int /*swi*/, const char * /*res*/);

extern _kernel_oserror *objmodule_deregister(int /*flags*/, int /*class*/);

/* Resource path initialisation */
extern void objmodule_ensure_path(const char *var, const char *default_setting);

/* ResourceFS registration/deregistration */
extern _kernel_oserror *objmodule_register_resources(int);
extern _kernel_oserror *objmodule_deregister_resources(int);

#endif
