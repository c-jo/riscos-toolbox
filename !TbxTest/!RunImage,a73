import riscos_toolbox as toolbox
from riscos_toolbox.objects import Menu,Window
from riscos_toolbox.gadgets import ActionButton,DisplayField,Adjuster,RadioButton,OptionButton,StringSet,NumberRange

class BarMenu(Menu):
    name = 'BarMenu'
    def __init__(self, id):
        super().__init__(id)

    def menu_selection(self, item):
        if item == 1:
            toolbox.quit()

class MainWindow(Window):
    name = 'MainWindow'
    def __init__(self, id):
        super().__init__(id)
        self.msg_no    = -1
        self.msgs      = 'Eggs Beans Chips Spam'.split()
        self.button    = ActionButton(self, 0x01)
        self.display   = DisplayField(self, 0x02)
        self.adj_left  = Adjuster    (self, 0x04)
        self.adj_right = Adjuster    (self, 0x05)

        self.inquisition_french   = RadioButton (self, 0x06)
        self.inquisition_spanish  = RadioButton (self, 0x07)
        self.inquisition_expected = OptionButton(self, 0x09)

        self.swallow_type = StringSet  (self, 0x0a)
        self.swallow_load = NumberRange(self, 0x0b)

    def actionbutton_selected(self, button):
        if button is self.button:
            self.button.faded = True

    def adjuster_clicked(self, adjuster, direction):
        if adjuster is self.adj_left:
            self.msg_no = (self.msg_no-1) % len(self.msgs)
            self.display.set_text(self.msgs[self.msg_no])
        if adjuster is self.adj_right:
            self.msg_no = (self.msg_no+1) % len(self.msgs)
            self.display.set_text(self.msgs[self.msg_no])

    def radiobutton_statechanged(self, radio, state, old_on):
        if radio is self.inquisition_spanish:
            if state:
                self.inquisition_expected.selected = False
            self.inquisition_expected.faded = state

    def stringset_valuechanged(self, stringset, new_value):
        pass

    def numberrange_valuechanged(self, numberrange, new_value):
        pass

toolbox.initialise('<TbxTest$Dir>')
toolbox.run()
